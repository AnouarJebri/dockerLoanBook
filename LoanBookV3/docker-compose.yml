version: '3.8'


networks:
  microsnetwork:
    driver: bridge



services:

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: password  # Replace with your desired root password
      MYSQL_DATABASE: auth_service      # Replace with your database name
      MYSQL_USER: root                   # Replace with your database username
      MYSQL_PASSWORD: password           # Replace with your database password
    ports:
      - "3306:3306"                      # Expose port 3306 for MySQL connections
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - microsnetwork




  bookservice:
    build:
      context: ./BookService
      dockerfile: Dockerfile
    image: bookservice:latest
    container_name: bookservice

    volumes:
      - ./BookService:/appv1/BookService
    networks:
      - microsnetwork
    depends_on:
      mariadb:
        condition: service_started





  authservice:
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    image: authservice:latest
    container_name: authservice
    volumes:
      - ./AuthService:/appv1/AuthService
    networks:
      - microsnetwork

    depends_on:
      mariadb:
        condition: service_started







  frontendservice:
    build:
      context: ./FrontendService
      dockerfile: Dockerfile
    image: frontendservice:latest
    container_name: frontendservice
    networks:
      - microsnetwork
    volumes:
      - ./FrontendService:/appv1/FrontendService
    depends_on:
      mariadb:
        condition: service_started
      authservice:
        condition: service_started
      bookservice:
        condition: service_started
      reservationservice:
        condition: service_started







  reservationservice:
    build:
      context: ./ReservationService
      dockerfile: Dockerfile
    image: reservationservice:latest
    container_name: reservationservice
    networks:
      - microsnetwork
    volumes:
      - ./ReservationService:/appv1/ReservationService
    depends_on:
      mariadb:
        condition: service_started
      authservice:
        condition: service_started
      bookservice:
        condition: service_started






  nginx:
    image: nginx:latest
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
       - frontendservice
    container_name: nginx
    networks:
      - microsnetwork






  maven-builder:
    image: maven:latest
    container_name: maven-builder
    volumes:
      - ./AuthService:/appv1/AuthService
      - ./BookService:/appv1/BookService
      - ./ReservationService:/appv1/ReservationService
      - ./FrontendService:/appv1/FrontendService
    working_dir: /appv1
    command: >
      bash -c "cd AuthService && mvn clean install &
               cd .. & cd BookService && mvn clean install &
               cd .. & cd ReservationService && mvn clean install &
               cd .. & cd FrontendService && mvn clean install"
    networks:
      - microsnetwork
