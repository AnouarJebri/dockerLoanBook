version: '3.8'


networks:
  microsnetwork:




services:

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: password  # Replace with your desired root password
      MYSQL_DATABASE: auth_service      # Replace with your database name
      MYSQL_USER: root                   # Replace with your database username
      MYSQL_PASSWORD: password           # Replace with your database password
    ports:
      - "3306:3306"                      # Expose port 3306 for MySQL connections
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - microsnetwork
   # healthcheck:
    #  test: ["CMD-SHELL", "mysqladmin ping -h mariadba2 -u root -ppassword"]
     # interval: 10s
      #timeout: 5s
      #retries: 3


  configserver:
    build:
      context: ./ConfigServer
      dockerfile: Dockerfile
    image: configserver:latest
    #container_name: configserver
    ports:
      - "8888:8888"
    networks:
      - microsnetwork
    depends_on:
      mariadb:
        condition: service_started
    #healthcheck:
     # test: [ "CMD", "curl", "-f", "http://localhost:8888/hi" ]
      #interval: 10s
      #timeout: 5s
      #retries: 3



  bookservice:
    build:
      context: ./BookService
      dockerfile: Dockerfile
    image: bookservice:latest
    container_name: bookservice
    ports:
      - "8084:8084"
    networks:
      - microsnetwork
    depends_on:
      mariadb:
        condition: service_started
      configserver:
        condition: service_started





  authservice:
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    image: authservice:latest
    container_name: authservice
    ports:
      - "8083:8083"
    networks:
      - microsnetwork
    #healthcheck:
     # test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      #interval: 10s
      #timeout: 5s
      #retries: 3
    depends_on:
      mariadb:
        condition: service_started
      configserver:
        condition: service_started

#  frontendservice:
#    build:
#      context: ./FrontendService
#      dockerfile: Dockerfile
#    image: frontendservice:latest
#    container_name: frontendservice
#    ports:
#      - "8085:8085"
#    networks:
#      - microsnetwork
#    depends_on:
#      mariadb:
#        condition: service_started
#      configserver:
#        condition: service_started